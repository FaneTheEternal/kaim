from typing import *

_P = ParamSpec('_P')
_T = TypeVar('_T')


class Profiler:
    def start(self): ...

    def stop(self): ...

    def __enter__(self): ...

    def __exit__(self, exc_type, exc_val, exc_tb): ...

    def __call__(self, fn: Callable[_P, _T]) -> Callable[_P, _T]: ...

    def get_entries(self) -> list[PyEntry]: ...

    def dump(self) -> str: ...


class PyEntry:
    @property
    def id(self) -> int: ...

    @property
    def kind(self) -> str: ...

    @property
    def called(self) -> str: ...

    @property
    def info(self) -> str: ...

    @property
    def time(self) -> tuple[float, float]: ...
